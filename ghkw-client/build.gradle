plugins {
    id 'kotlin-multiplatform'
    id 'kotlinx-serialization'
}


repositories {
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    google()
    jcenter()
}

kotlin {
    macosX64("macos") {
        binaries {
            executable("ghkw") {
                entryPoint = 'com.github.ktomoyasu.ghkw.cli.main'
            }
        }
    }

    if (project.findProperty("device")?.toBoolean() ?: false) {
        iosArm64('ios') {
            binaries {
                framework {
                    baseName = "GhkwClient"
                }
            }
        }
    } else {
        iosX64('ios') {
            binaries {
                framework {
                    baseName = "GhkwClient"
                }
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation rootProject.ext.kotlinCommon
                implementation rootProject.ext.coroutineCommon
                implementation rootProject.ext.serializationCommon
                implementation rootProject.ext.ktorClient
                implementation rootProject.ext.ktorClientJson
                implementation rootProject.ext.ktorClientLogger
            }
        }

        macosMain {
            dependencies {
                implementation rootProject.ext.coroutineNative
                implementation rootProject.ext.serializationNative
                implementation rootProject.ext.ktorClientNative
                implementation rootProject.ext.ktorClientCurl
                implementation rootProject.ext.ktorClientJsonNative
                implementation rootProject.ext.ktorClientNative
                implementation rootProject.ext.ktorClientLoggerNative
            }
        }

        iosMain {
            dependencies {
                implementation rootProject.ext.coroutineNative
                implementation rootProject.ext.serializationNative
                implementation rootProject.ext.ktorClientIos
                implementation rootProject.ext.ktorClientJsonNative
                implementation rootProject.ext.ktorClientNative
                implementation rootProject.ext.ktorClientLoggerNative
            }
        }
    }
}

// ios task
task packForXcode {
    def buildType = project.findProperty("kotlin.build.type") ?: "DEBUG"
    def target = project.findProperty("kotlin.target") ?: "ios"
    def framework = kotlin.targets."$target".compilations.main.target.binaries.findFramework("", buildType)

    dependsOn framework.linkTask

    doLast {
        copy {
            from framework.outputFile.parent
            into framework.outputFile.parentFile
            include 'data.framework/**'
            include 'data.framework.dSYM'
        }
    }
}

tasks.build.dependsOn packForXcode
